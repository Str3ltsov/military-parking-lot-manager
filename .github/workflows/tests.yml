name: Testing

on:
  push:
    branches:
      - master
      - develop
      - 'release/*'
      - 'feature/*'
      - 'bugfix/*'
      - 'chore/*'
  pull_request:
    branches:
      - master
      - develop

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE:  military_parking_lot_manager
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: ['ubuntu-latest']
        php-versions: ['8.4']
        laravel: ['12.0']
        dependency-stability: ['prefer-none']

    name: Testing P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2
          coverage: xdebug, mbstring, intl, dom, fileinfo, tokenizer, iconv

      - name: Get Composer Cache Directory
        id: composer-cache
        shell: bash
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Composer Dependency Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader\

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Node Dependency Cache
        uses: actions/cache@v4
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Node Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Tests
        run: composer test

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: browser-screenshots
          path: |
            tests/Browser/Screenshots
